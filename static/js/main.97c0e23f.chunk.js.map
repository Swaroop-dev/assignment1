{"version":3,"sources":["components/apicall.jsx","components/BottomComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["getJoke","category","fetch","then","res","json","BottomComponent","props","data","style","fontSize","fontFamily","App","state","jokes","handleCategoryChange","index","d2","setState","d1","value","handleClick","this","className","map","item","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAIaA,EAAU,SAACC,GAGpB,OAAOC,MAPM,oDAMaD,GAEvBE,MAAK,SAACC,GAAD,OAASA,EAAIC,W,OCgBVC,EApBS,SAACC,GASrB,OAAIA,EAAMC,KAIN,8BACI,oBAAIC,MAbG,CACXC,SAAS,OACTC,WAAW,kBAWP,SAAqBJ,EAAMC,SAJxB,6CCwCAI,G,kNA/CbC,MAAQ,CACNL,KAAK,KACLP,SAAS,KACTa,MAAM,M,EAQRC,qBAAqB,SAACC,GAClB,IAAMC,EAAG,EAAKJ,MAAML,KAAKQ,GACzB,EAAKE,SAAS,CAACjB,SAASgB,IACxBjB,EAAQiB,GACPd,MAAK,SAACgB,GAAD,OAAM,EAAKD,SAAS,CAACJ,MAAMK,EAAGC,Y,EAGxCC,YAAY,WACRrB,EAAQ,EAAKa,MAAMZ,UAAUE,MAAK,SAACgB,GAAD,OAAM,EAAKD,SAAS,CAACJ,MAAMK,EAAGC,Y,uDAbpE,WAAoB,IAAD,OFAjBlB,MAAM,GAAD,OAZQ,gDAaZC,MAAK,SAACC,GAAD,OAAOA,EAAIC,UECZF,MAAK,SAACK,GAAD,OAAQ,EAAKU,SAAS,CAACV,KAAKA,S,oBAcxC,WAAS,IAAD,SACsBc,KAAKT,MAA1BL,EADD,EACCA,KAAKP,EADN,EACMA,SAASa,EADf,EACeA,MACrB,OACA,sBAAKS,UAAU,MAAf,UACA,+CACA,qBAAKA,UAAU,YAAf,gBAESf,QAFT,IAESA,OAFT,EAESA,EAAMgB,KAAI,SAACC,EAAMT,GAAP,OACf,wBAAoBU,QAAS,kBAAI,EAAKX,qBAAqBC,IAA3D,SAAqES,GAAxDT,QAIR,OAARF,GAAiB,sDAAyBb,KAClC,OAARa,GAAgB,qBAAKS,UAAU,OAAf,SACf,cAAC,EAAD,CAAiBf,KAAMM,MAGZ,OAAXb,GAAmB,wBAAQsB,UAAU,MAAMG,QAAS,kBAAI,EAAKL,eAA1C,6B,GAxCPM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.97c0e23f.chunk.js","sourcesContent":["const fectchJoke=\"https://api.chucknorris.io/jokes/random?category=\"\r\nconst fetchURL = \"https://api.chucknorris.io/jokes/categories\"\r\n\r\n\r\nexport const getJoke = (category) =>{\r\n    \r\n    const newfetch=fectchJoke+category\r\n    return fetch(newfetch)\r\n      .then((res) => res.json())\r\n  }\r\n\r\n\r\nexport const getData=()=>\r\n    fetch(`${fetchURL}`)\r\n    .then((res)=>res.json())\r\n    \r\n","import React,{PureComponent} from 'react'\r\n\r\n\r\n\r\nconst BottomComponent = (props) => {\r\n    const styles = {\r\n        fontSize:\"14px\",\r\n        fontFamily:\"Century Gothic\",\r\n        // margin:\"auto\",\r\n        // padding:\"30px 15px\"\r\n    }\r\n\r\n        \r\n    if(!props.data){\r\n        return(<h1>loading...</h1>)\r\n    }\r\n    return(\r\n        <div>\r\n            <h6 style={styles} >{props.data}</h6>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default BottomComponent\r\n","import  React,{Component} from 'react';\r\nimport {getData, getJoke} from './components/apicall';\r\nimport BottomComponent from './components/BottomComponent'\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component{\r\n  state = {\r\n    data:null,\r\n    category:null,\r\n    jokes:null\r\n  };\r\n\r\n  componentDidMount(){\r\n      getData()\r\n        .then((data)=>this.setState({data:data}))\r\n  }\r\n\r\n  handleCategoryChange=(index)=>{  \r\n      const d2=this.state.data[index]\r\n      this.setState({category:d2})        \r\n      getJoke(d2)\r\n      .then((d1)=>this.setState({jokes:d1.value}))            \r\n  }\r\n\r\n  handleClick=()=>{\r\n      getJoke(this.state.category).then((d1)=>this.setState({jokes:d1.value}))\r\n  }\r\n\r\n  render(){\r\n    const {data,category,jokes}=this.state\r\n    return (\r\n    <div className=\"App\">\r\n    <h1>Chuck Norries</h1>\r\n    <div className=\"container\">\r\n      \r\n            {data?.map((item ,index) => \r\n        <button key={index} onClick={()=>this.handleCategoryChange(index)} >{item}</button>\r\n            )} \r\n               \r\n    </div>\r\n    {jokes!==null &&  <h3>Selected Category : {category}</h3>}\r\n    {jokes!==null && <div className=\"joke\">\r\n      <BottomComponent data={jokes}/>\r\n      </div>\r\n      }\r\n     {category!==null && <button className=\"btn\" onClick={()=>this.handleClick()}>New Joke</button>}  \r\n    </div>\r\n   \r\n    \r\n  );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}